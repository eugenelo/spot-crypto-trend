load("@aspect_rules_py//py:defs.bzl", "py_binary", "py_library", "py_test")
load("@pip_deps//:requirements.bzl", "requirement")

py_library(
    name = "simulation",
    srcs = glob(["src/simulation/*.py"]),
    deps = [
        requirement("seaborn"),
        ":vbt",
        "//momentum/position_generation:position_generation",
        "//momentum/core:core",
        "//data:data",
    ],
    visibility = ["//visibility:public"]
)

# Use vbtdev
py_library(
    name="vbt",
    srcs = glob(["src/simulation/vbt/*.py"]),
    imports = ["src"],
    deps = [
        ":simulation_vbtdev",
    ],
    visibility = ["//visibility:public"]
)

# Free vectorbt library hookups
py_library(
    name="simulation_vbtdev",
    srcs = glob(["src/simulation/vbt/vbtdev/*.py"]),
    imports = ["src"],
    deps = [
        requirement("vectorbt"),
        "//momentum/core:core_nb",
    ],
    visibility = ["//visibility:private"]
)

# Paid vectorbtpro library hookups
# py_library(
#     name="simulation_vbtpro",
#     srcs = glob(["src/simulation/vbt/vbtpro/*.py"]),
#     imports = ["src"],
#     deps = [
#         requirement("vectorbtpro"),
#         "//momentum/core:core_nb",
#     ],
#     visibility = ["//visibility:private"]
# )

py_test(
    name="test_simulate",
    srcs = ["test/test_simulate.py"],
    deps = [
        ":simulation",
        ":vbt",
    ],
    size="medium",
)

py_test(
    name="test_utils",
    srcs = ["test/test_utils.py"],
    deps = [
        ":simulation",
        "//data:data",
    ],
    size="small",
)

py_test(
    name="test_optimize",
    srcs = ["test/test_optimize.py"],
    deps = [
        ":simulation",
        "//data:data",
    ],
    size="small",
)
